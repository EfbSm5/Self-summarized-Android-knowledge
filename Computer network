输入网址到显示网页，中间发生了什么？
1.输入了网址，网址由几个部分构成，bilibili.com是服务器，可以进行寻找对应的web服务器，后面无后缀就去访问index.html等默认文件
2.获得了web服务器，需要发送网络信息，我们生成对应的http信息
3.我们需要知道消息需要发到哪，发到哪需要知道ip地址，我们只知道web服务器，不知道ip地址，而DNS知道ip地址。dns管理web与ip之间的关系，通过dns我们可以找到对应的ip
找到ip以后，还需要加上mac地址
4.找到了地址，我们就要调用硬件进行网络传输（协议栈）
5.TCP 是网络传输的协议，与其对应有udp,其更原始。tcp在这里会需要三次连接，客户端先发起连接SYN，服务器收到，返回SYN+ACK，客户端受到返回确认了可以建立链接，发送ACK确认，进行信息传输，服务器接收到确认切换到 listen 状态
6.如果是https，在三次握手后还要tls的四次握手，在四次握手的过程中，第一步客户端发送一个随机数及其支持的协议，
第二步服务器接收到信息确认协议是否支持，选择一个密码套件，返回一个随机数，并发送证书。
第三步客户端确认证书，客户端使用服务器的公钥加密一个新的随机数，传输到服务器，服务器接收到消息以后用私钥解密，这时双方都有三个随机数，可以进行加密，客户端把之前的通信数据加密发送给服务器。
第四步服务器也把通信数据发送给服务器进行验证，如果加密无问题，握手完成

Socket：操作系统提供的“网络通信编程接口”（抽象层）。是对 TCP/UDP 等传输层能力的封装。它不是协议，而是“编程接口 + 通信端点”概念。
WebSocket：一种应用层协议建立在 TCP 之上，先通过 HTTP(S) 握手，再升级为全双工持续连接，常用于浏览器与服务器实时通信。

应用层，负责提供接口
表示层，转换数据为系统能识别的形式
会话层，建立管理终止通信会话，
传输层，端到端数据传输
网络层，数据路由，转发
数据链路层，数据封帧，mac寻址
物理层，物理网络中传输数据帧

对于UDP视频聊天的丢包问题，我们不会依赖UDP本身，而是在应用层采用一套组合策略：
首先，最根本的是自适应码率控制，根据网络状况动态调整视频参数，从源头上减少拥塞和丢包。
其次，会采用FEC前向纠错，发送一些冗余包，让接收端能在不增加延迟的情况下自行恢复少量丢包。
对于特别重要的数据，可能会采用受限的重传机制，但会设置严格的超时时间以避免增加过大延迟。
最后，作为补救措施，会在接收端启用错误隐藏技术，用上一帧画面或周边像素来填充丢失的数据块，尽可能弱化丢包对用户观感的影响。
总之，我们的核心目标是在延迟和视频质量之间做一个最佳的权衡，保证通话的实时性和连贯性。

http 1.0
http 1.1 长连接，未解决队头阻塞问题，管道化但是仍然存在问题
http 2.0 压缩头部，多路复用解决http的队头阻塞，显著提高性能
3.0 彻底解决阻塞，换成QUIC协议
